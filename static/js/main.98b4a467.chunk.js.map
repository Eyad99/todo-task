{"version":3,"sources":["types.js","App.js","actions/index.js","reportWebVitals.js","reducer/reducer.js","index.js"],"names":["Add_Todo","Edit_Todo","Remove_Todo","Clear_Todo","Completed","Canceled","App","state","text","date","Date","background","display","color","render_todo","todo","props","console","log","map","alltodo","className","style","xs","xl","moment","format","size","type","icon","DeleteFilled","shape","onClick","remove_todo","id","EditFilled","edit_todo","canceled","CheckOutlined","completed","this","Content","Layout","margin","padding","minHeight","textAlign","lg","paddingRight","value","onChange","e","setState","target","placeholder","PlusOutlined","marginRight","add_todo","CloseCircleOutlined","clear_todo","Component","connect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","Math","random","newtodo","prompt","filter","completed_color","text_color","display_none","canceled_color","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAAaA,G,MAAW,YACXC,EAAY,YACZC,EAAc,cACdC,EAAa,aACbC,EAAY,YACZC,EAAW,W,OCQlBC,E,4MACJC,MAAM,CACJC,KAAO,GACPC,KAAO,IAAIC,KACXC,WAAa,GACbC,QAAU,GACVC,MAAQ,I,EAGVC,YAAc,WAAM,IACXC,EAAQ,EAAKC,MAAbD,KAEP,OADAE,QAAQC,IAAIH,GAEV,8BAEIA,EAAKI,KAAI,SAAAC,GACR,OACG,eAAC,IAAD,CAAKC,UAAU,OAAOC,MAAO,CAAEX,WAAaS,EAAQT,YAApD,UACI,eAAC,IAAD,CAAKY,GAAI,GAAIC,GAAI,EAAjB,UACE,mBAAGF,MAAO,CAAET,MAAQO,EAAQP,OAA5B,SAAsCY,IAAO,IAAIf,KAAKU,EAAQX,OAAOiB,OAAO,6BAC5E,oBAAIJ,MAAO,CAAET,MAAQO,EAAQP,OAA7B,SAAuCO,EAAQZ,UAEnD,eAAC,IAAD,CAAKe,GAAI,GAAIC,GAAI,EAAGH,UAAU,OAA9B,UACE,cAAC,IAAD,CAAQM,KAAK,QAAQC,KAAK,SAASC,KAAO,cAACC,EAAA,EAAD,IAAkBC,MAAM,SAASC,QAAS,kBAAM,EAAKhB,MAAMiB,YAAYb,EAAQc,OACzH,sBAAKZ,MAAO,CAAEV,QAAUQ,EAAQR,SAAhC,UACE,cAAC,IAAD,CAAQe,KAAK,QAAQC,KAAK,UAAUC,KAAM,cAACM,EAAA,EAAD,IAAgBJ,MAAM,SAASC,QAAS,kBAAM,EAAKhB,MAAMoB,UAAUhB,EAAQc,OACrH,cAAC,IAAD,CAAQP,KAAK,QAAQC,KAAK,SAAUG,MAAM,SAASC,QAAS,kBAAM,EAAKhB,MAAMqB,SAASjB,EAAQc,KAA9F,eACA,cAAC,IAAD,CAAQP,KAAK,QAAQC,KAAK,UAAUC,KAAM,cAACS,EAAA,EAAD,IAAmBP,MAAM,SAASC,QAAS,kBAAM,EAAKhB,MAAMuB,UAAUnB,EAAQc,eAVvDd,EAAQc,U,4CAsB3F,WAAS,IAAD,OACVjB,QAAQC,IAAIsB,KAAKxB,OADP,IAECyB,EAAWC,IAAXD,QACAd,EAAQ,QACf,OACE,eAAC,IAAD,CAAQN,UAAU,SAAlB,UACO,oBAAIA,UAAU,KAAd,uBAEF,eAACoB,EAAD,CAASpB,UAAU,iCACjBC,MAAO,CACLqB,OAAQ,YACRC,QAAS,GACTC,UAAW,KAJf,UAOI,eAAC,IAAD,CAAKvB,MAAO,CAAEwB,UAAY,UAA1B,UACE,cAAC,IAAD,CAAKvB,GAAI,GAAIwB,GAAI,GAAIvB,GAAI,GAAIF,MAAO,CAAE0B,aAAe,IAArD,SACC,cAAC,IAAD,CAAOpB,KAAK,OAAOqB,MAAOT,KAAKjC,MAAMC,KAAM0C,SAAW,SAACC,GAAD,OAAM,EAAKC,SAAS,CAAC5C,KAAO2C,EAAEE,OAAOJ,SAASK,YAAY,mBAEjH,eAAC,IAAD,CAAK/B,GAAI,GAAIwB,GAAI,EAAGvB,GAAI,GAAxB,UAGC,cAAC,IAAD,CAAQI,KAAK,UAAUG,MAAM,SAASF,KAAM,cAAC0B,EAAA,EAAD,IAAkB5B,KAAMA,EAAML,MAAO,CAAEkC,YAAc,IAAMxB,QAAS,WAAQ,GAAuB,KAApB,EAAKzB,MAAMC,KAAa,OAAO,EAAKD,MAAMC,KAAW,EAAKQ,MAAMyC,SAAS,EAAKlD,MAAMC,KAAK,EAAKD,MAAME,KAAK,EAAKF,MAAMI,WAAW,EAAKJ,MAAMK,SAAW,EAAKwC,SAAS,CAAC5C,KAAO,QACtS,cAAC,IAAD,CAAQoB,KAAK,SAASG,MAAM,SAASF,KAAM,cAAC6B,EAAA,EAAD,IAAyB/B,KAAMA,EAAMK,QAAS,WAAO,EAAKhB,MAAM2C,sBAG9GnB,KAAK1B,wB,GAjEF8C,aA+EHC,mBAPf,SAAyBtD,GACvB,MAAM,CACJQ,KAAMR,KAK6B,CAACkD,SCzFhB,SAACjD,EAAOC,EAAOE,EAAaC,EAAUC,GAS1D,MARe,CACXe,KAAO5B,EACPQ,OACAC,OACAE,aACAC,UACAC,UDkFyCoB,YCvEvB,SAACC,GAKvB,MAJe,CACXN,KAAO1B,EACPgC,ODoEqDE,UC9ErC,SAACF,GAKrB,MAJe,CACXN,KAAO3B,EACPiC,OD2E+DyB,WChE9C,WAIrB,MAHe,CACX/B,KAAOzB,ID8DmEoC,UC1DzD,SAACL,GAKtB,MAJe,CACXN,KAAOxB,EACP8B,ODuDoFG,SCnDpE,SAACH,GAKrB,MAJe,CACXN,KAAOvB,EACP6B,QDgDO2B,CAAwFvD,GEhFxFwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCiECQ,EAtEC,WAAyB,IAAxBhE,EAAuB,uDAAf,GAAIiE,EAAW,uCAChCzD,EAAO,KACX,GAAGyD,EAAO5C,OAAS5B,EAGf,OAFAe,EAAI,sBAAOR,GAAP,CAAe,CAACC,KAAOgE,EAAOhE,KAAOC,KAAO+D,EAAO/D,KAAOE,WAAa6D,EAAO7D,WAAYC,QAAU4D,EAAO5D,QAAUsB,GAAKuC,KAAKC,YACnIzD,QAAQC,IAAI,aAAeH,GACpBA,EAGN,GAAGyD,EAAO5C,OAAS3B,EAAU,CAC9B,IAAM0E,EAAUC,OAAO,uBAUvB,OATA7D,EAAOR,EAAMsE,QAAO,SAAA9D,GAChB,OAAGA,EAAKmB,KAAOsC,EAAOtC,IAClBnB,EAAKP,KAAOmE,EACL5D,GAGAA,KAMd,GAAGyD,EAAO5C,OAAS1B,EAEpB,OADAa,EAAOR,EAAMsE,QAAO,SAAA9D,GAAI,OAAIA,EAAKmB,KAAOsC,EAAOtC,MAG9C,GAAGsC,EAAO5C,OAASzB,EAEpB,OADAY,EAAO,GAGN,GAAGyD,EAAO5C,OAASxB,EAAU,CAC9B,IAAM0E,EAAkB,QAClBC,EAAa,QACbC,EAAe,OAYrB,OAXAjE,EAAOR,EAAMsE,QAAO,SAAA9D,GAChB,OAAGA,EAAKmB,KAAOsC,EAAOtC,IAClBnB,EAAKJ,WAAamE,EAClB/D,EAAKF,MAASkE,EACdhE,EAAKH,QAAUoE,EACRjE,GAGAA,KAKd,GAAGyD,EAAO5C,OAASvB,EAAS,CAC7B,IAAM4E,EAAiB,MACjBF,EAAa,QACbC,EAAe,OAarB,OAZAjE,EAAOR,EAAMsE,QAAO,SAAA9D,GAChB,OAAGA,EAAKmB,KAAOsC,EAAOtC,IAClBnB,EAAKJ,WAAasE,EAClBlE,EAAKF,MAASkE,EACdhE,EAAKH,QAAUoE,EAERjE,GAGAA,KAOf,OAAOR,GC5DT2E,EAAQC,YAAYZ,GAC1Ba,IAASC,OACP,cAAC,IAAD,CAAUH,MAASA,EAAnB,SACE,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,QAIJC,SAASC,eAAe,SAE1B1B,M","file":"static/js/main.98b4a467.chunk.js","sourcesContent":["export const Add_Todo = \"Add_Todo\";\r\nexport const Edit_Todo = \"Edit_Todo\";\r\nexport const Remove_Todo = \"Remove_Todo\";\r\nexport const Clear_Todo = \"Clear_Todo\";\r\nexport const Completed = \"Completed\";\r\nexport const Canceled = \"Canceled\";\r\n\r\n\r\n","// import React ,{useState} from 'react';\nimport React , {Component} from 'react';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport 'antd-button-color/dist/css/style.css';\n// import Button from \"antd-button-color\";\nimport moment from 'moment';\nimport {Layout , Button , Input , Row , Col} from 'antd';\nimport { PlusOutlined , CloseCircleOutlined , CheckOutlined , EditFilled , DeleteFilled} from '@ant-design/icons';\nimport { blue , green } from '@ant-design/colors';\nimport {add_todo,edit_todo,remove_todo,clear_todo,completed,canceled} from './actions';\n\nclass App extends Component{\n  state={\n    text : '',\n    date : new Date(),\n    background : '',\n    display : '',\n    color : ''\n  }\n  \n  render_todo = () =>{\n    const {todo} = this.props;\n    console.log(todo)\n    return(\n      <div>\n        {\n          todo.map(alltodo => {\n           return(\n              <Row className=\"todo\" style={{ background : alltodo.background }} key={alltodo.id}>\n                  <Col xs={24} xl={8}>\n                    <p style={{ color : alltodo.color }}>{moment(new Date(alltodo.date)).format('MMMM Do YYYY, h:mm:ss a')}</p>\n                    <h4 style={{ color : alltodo.color }}>{alltodo.text}</h4>\n                  </Col>\n                <Col xs={24} xl={8} className=\"icon\">\n                  <Button size=\"large\" type=\"danger\" icon ={<DeleteFilled />} shape=\"circle\" onClick={() => this.props.remove_todo(alltodo.id)}></Button>\n                  <div style={{ display : alltodo.display }}>\n                    <Button size=\"large\" type=\"primary\" icon={<EditFilled />} shape=\"circle\" onClick={() => this.props.edit_todo(alltodo.id)}></Button>\n                    <Button size=\"large\" type=\"danger\"  shape=\"circle\" onClick={() => this.props.canceled(alltodo.id)}>X</Button>\n                    <Button size=\"large\" type=\"success\" icon={<CheckOutlined />} shape=\"circle\" onClick={() => this.props.completed(alltodo.id)}></Button>\n                  </div>\n                </Col>\n               </Row>\n               \n\n           ) \n          })\n        }\n      </div>\n    )\n  }\n  render(){\nconsole.log(this.props);\n    const {Content} = Layout;\n    const  size  = 'large';\n    return(\n      <Layout className=\"layout\">\n             <h1 className=\"h1\">Todo List</h1>\n      \n           <Content className=\"site-layout-background content\"\n             style={{\n               margin: '14px 16px',\n               padding: 24,\n               minHeight: 660,\n               }}\n             >\n               <Row style={{ textAlign : 'center'}}>\n                 <Col xs={24} lg={12} xl={12} style={{ paddingRight : 10 }}>\n                  <Input type=\"text\" value={this.state.text} onChange ={(e) =>this.setState({text : e.target.value})} placeholder=\"Add New Todo\" />\n                 </Col>\n                 <Col xs={24} lg={8} xl={12} >\n                   {/* <Button size={size} onClick={() => { if(this.state.text === ''){return this.state.text} else{this.props.add_todo(this.state.text,this.state.background,this.state.display);} this.setState({text : ''})}} > Add </Button>\n                        <Button danger size={size} onClick={() => {this.props.clear_todo()}} > Delete All todo </Button> */}\n                  <Button type=\"success\" shape=\"circle\" icon={<PlusOutlined />} size={size} style={{ marginRight : 10 }} onClick={() => { if(this.state.text === ''){return this.state.text} else{this.props.add_todo(this.state.text,this.state.date,this.state.background,this.state.display);} this.setState({text : ''})}} />\n                  <Button type=\"danger\" shape=\"circle\" icon={<CloseCircleOutlined />} size={size} onClick={() => {this.props.clear_todo()}} />\n                 </Col>\n               </Row>\n              {this.render_todo()}\n           </Content>\n      </Layout>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    todo :state\n  }\n}\n\n\nexport default connect(mapStateToProps,{add_todo,remove_todo,edit_todo,clear_todo,completed,canceled})(App);\n","import {Add_Todo ,Edit_Todo , Remove_Todo , Clear_Todo , Completed , Canceled} from '../types';\r\n\r\n\r\nexport const add_todo = (text , date , background , display , color)=>{\r\n    const action = {\r\n        type : Add_Todo,\r\n        text,\r\n        date,\r\n        background,\r\n        display,\r\n        color\r\n    }\r\n    return action\r\n}\r\nexport const edit_todo =(id)=>{\r\n    const action = {\r\n        type : Edit_Todo,  \r\n        id\r\n    }\r\n    return action\r\n}\r\nexport const remove_todo =(id)=>{\r\n    const action = {\r\n        type : Remove_Todo,\r\n        id\r\n    }\r\n    return action\r\n}\r\nexport const clear_todo =()=>{\r\n    const action = {\r\n        type : Clear_Todo\r\n    }\r\n    return action\r\n}\r\nexport const completed = (id) =>{\r\n    const action = {\r\n        type : Completed,\r\n        id\r\n    }\r\n    return action\r\n}\r\nexport const canceled = (id) =>{\r\n    const action = {\r\n        type : Canceled,\r\n        id\r\n    }\r\n    return action\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Add_Todo ,Edit_Todo , Remove_Todo , Clear_Todo , Completed , Canceled} from '../types';\r\n\r\nconst reducer = (state = [] ,action) => {\r\n    let todo = null;\r\n    if(action.type === Add_Todo){\r\n        todo = [...state , {text : action.text , date : action.date , background : action.background, display : action.display , id : Math.random()}];\r\n        console.log(\"todo is : \" + todo)\r\n        return todo\r\n        \r\n    }\r\n    else if(action.type === Edit_Todo){\r\n        const newtodo = prompt(\"Enter Name New Todo\");\r\n        todo = state.filter(todo =>{\r\n            if(todo.id === action.id ){\r\n                todo.text = newtodo;\r\n                return todo\r\n            }\r\n            else{\r\n                return todo\r\n            }\r\n        });\r\n        return todo;\r\n        \r\n    }\r\n    else if(action.type === Remove_Todo){\r\n        todo = state.filter(todo => todo.id !== action.id);\r\n        return todo;\r\n    }\r\n    else if(action.type === Clear_Todo){\r\n        todo = [];\r\n        return todo;\r\n    }\r\n    else if(action.type === Completed){\r\n        const completed_color = \"green\";\r\n        const text_color = \"white\";\r\n        const display_none = \"none\";\r\n        todo = state.filter(todo =>{\r\n            if(todo.id === action.id ){\r\n                todo.background = completed_color;\r\n                todo.color  = text_color;\r\n                todo.display = display_none\r\n                return todo\r\n            }\r\n            else{\r\n                return todo\r\n            }\r\n        });\r\n        return todo;\r\n    }\r\n    else if(action.type === Canceled){\r\n        const canceled_color = \"red\";\r\n        const text_color = \"white\";\r\n        const display_none = \"none\";\r\n        todo = state.filter(todo =>{\r\n            if(todo.id === action.id ){\r\n                todo.background = canceled_color;\r\n                todo.color  = text_color;\r\n                todo.display = display_none\r\n\r\n                return todo\r\n            }\r\n            else{\r\n                return todo\r\n            }\r\n        });\r\n        return todo;\r\n    }\r\n\r\n    else{\r\n        return state\r\n    }\r\n}\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducer/reducer'\n\nconst store = createStore(reducer);\nReactDOM.render(\n  <Provider store = {store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}